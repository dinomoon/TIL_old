// 다중 상속은 여러 개의 클래스를 상속받음으로써 클래스의 재사용과 코딩의 효울을
// 높이는 장점이 있는 반면, 보이지 않는 치명적인 문제를 내포하고 있다.
// 예를 들어 다이아몬드 형의 상속 관계일 때...!

// 그 문제를 해결하기 위해서 가상 상속을 이용!

class In : virtual public BaseIO{ // virtual 키워드 사용!!

};

class Out : virtual public BaseIO{  // virtual 키워드 사용!!

};

// 가상 상속을 하면 파생 클래스의 객체가 생성될 때 기본 클래스의 멤버 공간을
// 오직 한 번만 할당하고, 이미 할당되어 있다면 그 공간을 공유하도록 지시함.
// 따라서, 가상 기본 클래스의 멤버 공간은 오직 한 번만 생성됌.
